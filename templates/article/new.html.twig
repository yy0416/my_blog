{% extends 'base.html.twig' %}

{% block title %}Nouvel article
{% endblock %}

{% block stylesheets %}
	{{ parent() }}
	<style>
		.tag-input-hidden {
			display: none;
		}
		.tag-badge {
			margin-right: 5px;
			margin-bottom: 5px;
			display: inline-block;
		}
		.tag-container {
			margin-top: 10px;
		}
		.ck-editor__editable {
			min-height: 300px;
		}
		#toolbar-container {
			padding: 10px;
			background: #f8f9fa;
			border: 1px solid #ddd;
			border-bottom: 0;
		}
	</style>
{% endblock %}

{% block body %}
	<div class="container mt-4">
		<div class="card">
			<div class="card-header">
				<h1>
					<i class="fas fa-pen"></i>
					Créer un nouvel article</h1>
			</div>
			<div class="card-body">
				{{ form_start(form, {'attr': {'id': 'article-form', 'autocomplete': 'off', 'novalidate': 'novalidate'}}) }}
				{{ form_errors(form) }}
				{{ form_row(form._token) }}
				{{ form_row(form.title) }}

				<div class="form-group">
					{{ form_label(form.content) }}
					<div id="toolbar-container"></div>
					{{ form_widget(form.content, {'attr': {'class': 'ckeditor'}}) }}
					{{ form_errors(form.content) }}
					<div class="invalid-feedback" id="content-error" style="display: none;">
						Le contenu de l'article est requis.
					</div>
				</div>

				{{ form_row(form.category) }}
				{{ form_row(form.tagInput) }}
				<div class="tag-container" id="tag-container"></div>
				{{ form_widget(form.tags) }}

				<button type="submit" class="btn btn-primary mt-3" id="submit-btn">
					<i class="fas fa-save"></i>
					Créer
				</button>
				<a href="{{ path('app_home') }}" class="btn btn-secondary mt-3">
					<i class="fas fa-arrow-left"></i>
					Retour
				</a>
				{{ form_end(form) }}
			</div>
		</div>
	</div>
{% endblock %}

{% block javascripts %}
	{{ parent() }}
	<!-- 使用包含更多功能的 CKEditor 5 版本 -->
	<script src="https://cdn.ckeditor.com/ckeditor5/36.0.1/decoupled-document/ckeditor.js"></script>
	<script>
		$(document).ready(function () { // 初始化 CKEditor 5
let editor;

// 移除 textarea 的 required 属性
const contentTextarea = document.querySelector('#article_content');
contentTextarea.removeAttribute('required');

DecoupledEditor.create(document.querySelector('.ckeditor'), {
toolbar: {
items: [
'heading',
'|',
'fontSize',
'fontFamily',
'fontColor',
'fontBackgroundColor',
'|',
'bold',
'italic',
'underline',
'strikethrough',
'|',
'alignment',
'|',
'link',
'bulletedList',
'numberedList',
'|',
'outdent',
'indent',
'|',
'imageUpload',
'blockQuote',
'insertTable',
'mediaEmbed',
'undo',
'redo'
]
},
language: 'fr',
image: {
toolbar: ['imageTextAlternative', 'imageStyle:full', 'imageStyle:side']
},
table: {
contentToolbar: ['tableColumn', 'tableRow', 'mergeTableCells']
},
// 图片上传配置
ckfinder: {
uploadUrl: '{{ path('app_upload_image') }}'
}
}).then(newEditor => {
editor = newEditor;

// DecoupledEditor 需要手动添加工具栏
const toolbarContainer = document.querySelector('#toolbar-container');
toolbarContainer.appendChild(editor.ui.view.toolbar.element);

// 使用 jQuery 处理表单提交，避免浏览器默认验证
$('#article-form').on('submit', function (e) {
e.preventDefault();

// 验证标题
const titleInput = document.querySelector('#article_title');
if (! titleInput.value.trim()) {
titleInput.classList.add('is-invalid');
return false;
} else {
titleInput.classList.remove('is-invalid');
}

// 验证内容
if (editor && ! editor.getData().trim()) {
$('#content-error').show();
return false;
} else {
$('#content-error').hide();
}

// 设置内容
if (editor) {
contentTextarea.value = editor.getData();
}

// 提交表单
this.submit();
});
}).catch(error => {
console.error(error);
});

// 处理标签输入
const tagInput = $('.tag-input');
const tagContainer = $('#tag-container');
const tagsSelect = $('select[name="article[tags][]"]');

// 加载已有标签
tagsSelect.find('option:selected').each(function () {
addTagBadge($(this).text(), $(this).val());
});

// 处理标签输入
tagInput.on('keydown', function (e) {
if (e.key === 'Enter' || e.key === ',') {
e.preventDefault();
const tagText = $(this).val().trim();
if (tagText) { // 添加标签
$.ajax({
url: '/tag/new-ajax',
method: 'POST',
contentType: 'application/json',
data: JSON.stringify(
{name: tagText}
),
success: function (response) {
if (response.success) {
addTagBadge(response.tag.name, response.tag.id);
tagInput.val('');
}
}
});
}
}
});

// 添加标签徽章
function addTagBadge(name, id) { // 检查是否已存在
if (tagsSelect.find (`option[value="${id}"]:selected`).length === 0 && tagContainer.find (`span[data-id="${id}"]`).length === 0) { // 添加到选择框
const option = new Option(name, id, true, true);
tagsSelect.append(option);

// 添加徽章
const badge = $(`
						<span class="badge bg-primary tag-badge" data-id="${id}">
							${name}
							<i class="fas fa-times ms-1 remove-tag" style="cursor: pointer;"></i>
						</span>
					`);
tagContainer.append(badge);

// 处理删除
badge.find('.remove-tag').on('click', function () {
tagsSelect.find (`option[value="${id}"]:selected`).prop('selected', false);
badge.remove();
});
}
}

// 处理逗号分隔的多个标签
tagInput.on('blur', function () {
const tags = $(this).val().split(',');
if (tags.length > 0) {
tags.forEach(tag => {
const tagText = tag.trim();
if (tagText) {
$.ajax({
url: '/tag/new-ajax',
method: 'POST',
contentType: 'application/json',
data: JSON.stringify(
{name: tagText}
),
success: function (response) {
if (response.success) {
addTagBadge(response.tag.name, response.tag.id);
}
}
});
}
});
$(this).val('');
}
});
});
	</script>
{% endblock %}
