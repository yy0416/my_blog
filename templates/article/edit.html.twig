{% extends 'base.html.twig' %}

{% block title %}Modifier l'article
{% endblock %}

{% block stylesheets %}
	<link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-bs4.min.css" rel="stylesheet">
	<style>
		.tag-input-hidden {
			display: none;
		}
		.tag-badge {
			margin-right: 5px;
			margin-bottom: 5px;
			display: inline-block;
		}
		.tag-container {
			margin-top: 10px;
		}
	</style>
{% endblock %}

{% block body %}
	<div class="container mt-4">
		<div class="card">
			<div class="card-header">
				<h1>
					<i class="fas fa-edit"></i>
					Modifier l'article
				</h1>
			</div>
			<div class="card-body">
				{{ form_start(form, {
					'attr': {
						'id': 'article-form',
						'autocomplete': 'off'
					}
				}) }}
				{{ form_errors(form) }}
				{{ form_row(form._token) }}
				{{ form_row(form.title) }}
				{{ form_row(form.content) }}
				{{ form_row(form.category) }}
				{{ form_row(form.tagInput) }}
				<div class="tag-container" id="tag-container"></div>
				{{ form_widget(form.tags) }}

				<div class="mt-4">
					<button type="submit" class="btn btn-primary">
						<i class="fas fa-save"></i>
						Enregistrer
					</button>
					<a href="{{ path('app_article_index') }}" class="btn btn-secondary">
						<i class="fas fa-arrow-left"></i>
						Retour à la liste
					</a>
				</div>
				{{ form_end(form) }}
			</div>
		</div>

		<form method="post" action="{{ path('app_article_delete', {'id': article.id}) }}" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cet article ?');" class="mt-3">
			<input type="hidden" name="_token" value="{{ csrf_token('delete' ~ article.id) }}">
			<button class="btn btn-danger">Supprimer</button>
		</form>
	</div>
{% endblock %}

{% block javascripts %}
	<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-bs4.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/lang/summernote-fr-FR.min.js"></script>
	<script>
		$(document).ready(function () {
$('.summernote').summernote({
lang: 'fr-FR',
height: 300,
toolbar: [
[
'style', ['style']
],
[
'font',
[
'bold', 'underline', 'clear'
]
],
[
'color', ['color']
],
[
'para',
[
'ul', 'ol', 'paragraph'
]
],
[
'table', ['table']
],
[
'insert',
[
'link', 'picture', 'video'
]
],
[
'view',
[
'fullscreen', 'codeview', 'help'
]
],
[
'misc', ['emoji']
]
]
});

// 处理标签输入
const tagInput = $('.tag-input');
const tagContainer = $('#tag-container');
const tagsSelect = $('select[name="article[tags][]"]');

// 加载已有标签
tagsSelect.find('option:selected').each(function () {
addTagBadge($(this).text(), $(this).val());
});

// 处理标签输入
tagInput.on('keydown', function (e) {
if (e.key === 'Enter' || e.key === ',') {
e.preventDefault();
const tagText = $(this).val().trim();
if (tagText) { // 添加标签
$.ajax({
url: '/tag/new-ajax',
method: 'POST',
contentType: 'application/json',
data: JSON.stringify(
{name: tagText}
),
success: function (response) {
if (response.success) {
addTagBadge(response.tag.name, response.tag.id);
tagInput.val('');
}
}
});
}
}
});

// 添加标签徽章
function addTagBadge(name, id) { // 检查是否已存在
if (tagsSelect.find (`option[value="${id}"]:selected`).length === 0) { // 添加到选择框
const option = new Option(name, id, true, true);
tagsSelect.append(option);

// 添加徽章
const badge = $(`
						<span class="badge bg-primary tag-badge" data-id="${id}">
							${name}
							<i class="fas fa-times ms-1 remove-tag" style="cursor: pointer;"></i>
						</span>
					`);
tagContainer.append(badge);

// 处理删除
badge.find('.remove-tag').on('click', function () {
tagsSelect.find (`option[value="${id}"]`).prop('selected', false);
badge.remove();
});
}
}

// 处理逗号分隔的多个标签
tagInput.on('blur', function () {
const tags = $(this).val().split(',');
if (tags.length > 0) {
tags.forEach(tag => {
const tagText = tag.trim();
if (tagText) {
$.ajax({
url: '/tag/new-ajax',
method: 'POST',
contentType: 'application/json',
data: JSON.stringify(
{name: tagText}
),
success: function (response) {
if (response.success) {
addTagBadge(response.tag.name, response.tag.id);
}
}
});
}
});
$(this).val('');
}
});
});
	</script>
{% endblock %}
